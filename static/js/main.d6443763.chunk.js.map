{"version":3,"sources":["views/media.js","views/PreorderView.js","App.js","serviceWorker.js","index.js"],"names":["Media","name","tags","images","large","small","sort","a","b","localeCompare","_tagFilter","tag","item","some","RootView","props","state","selectedPrimary","selectedSecondary","maxImageWidth","all","g10","filter","naturals","synthetics","micarta","wood","pinecone","dragonscale","lizardskin","zoomIn","this","newValue","setState","primaryButton","type","text","Button","variant","onClick","secondaryButton","className","ButtonGroup","zoom","disabled","styles","maxWidth","map","image","idx","key","style","alt","process","hideDownload","hideZoom","media","renderImages","renderToolbar","renderMedia","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6443763.chunk.js","sourcesContent":["export const Media = [\n    {\n        name: 'Antique Stag Bone',\n        tags: ['naturals'],\n        images: [\n            { large: 'antique-stag-bone-1.jpg', small: 'antique-stag-bone-1-small.jpg' },\n            { large: 'antique-stag-bone-2.jpg', small: 'antique-stag-bone-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Burgundy Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-burgundy-2.jpg', small: 'burlap-micarta-burgundy-2-small.jpg' },\n            { large: 'burlap-micarta-burgundy-1.jpg', small: 'burlap-micarta-burgundy-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Coffeebag Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-coffeebag-1.jpg', small: 'burlap-micarta-coffeebag-1-small.jpg' },\n            { large: 'burlap-micarta-coffeebag-2.jpg', small: 'burlap-micarta-coffeebag-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Drunken Coffeebag Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-drunken-coffeebag-1.jpg', small: 'burlap-micarta-drunken-coffeebag-1-small.jpg' },\n            { large: 'burlap-micarta-drunken-coffeebag-2.jpg', small: 'burlap-micarta-drunken-coffeebag-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Evergreen Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-evergreen-1.jpg', small: 'burlap-micarta-evergreen-1-small.jpg' },\n            { large: 'burlap-micarta-evergreen-2.jpg', small: 'burlap-micarta-evergreen-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Forest Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-forest-1.jpg', small: 'burlap-micarta-forest-1-small.jpg' },\n            { large: 'burlap-micarta-forest-2.jpg', small: 'burlap-micarta-forest-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Lime Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-lime-1.jpg', small: 'burlap-micarta-lime-1-small.jpg' },\n            { large: 'burlap-micarta-lime-2.jpg', small: 'burlap-micarta-lime-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Midnite Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-midnite-2.jpg', small: 'burlap-micarta-midnite-2-small.jpg' },\n            { large: 'burlap-micarta-midnite-1.jpg', small: 'burlap-micarta-midnite-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Navy Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-navy-1.jpg', small: 'burlap-micarta-navy-1-small.jpg' },\n            { large: 'burlap-micarta-navy-2.jpg', small: 'burlap-micarta-navy-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Orange Fire Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-orange-fire-1.jpg', small: 'burlap-micarta-orange-fire-1-small.jpg' },\n            { large: 'burlap-micarta-orange-fire-2.jpg', small: 'burlap-micarta-orange-fire-2-small.jpg' },\n            { large: 'burlap-micarta-orange-fire-3.jpg', small: 'burlap-micarta-orange-fire-3-small.jpg' },\n        ]\n    },\n    {\n        name: 'Oreo Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-oreo-1.jpg', small: 'burlap-micarta-oreo-1-small.jpg' },\n            { large: 'burlap-micarta-oreo-2.jpg', small: 'burlap-micarta-oreo-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Royal and Gold Flecked Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-royal-and-gold-1.jpg', small: 'burlap-micarta-royal-and-gold-1-small.jpg' },\n            { large: 'burlap-micarta-royal-and-gold-2.jpg', small: 'burlap-micarta-royal-and-gold-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Sandstone Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-sandstone-1.jpg', small: 'burlap-micarta-sandstone-1-small.jpg' },\n            { large: 'burlap-micarta-sandstone-2.jpg', small: 'burlap-micarta-sandstone-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Smoke Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-smoke-1.jpg', small: 'burlap-micarta-smoke-1-small.jpg' },\n            { large: 'burlap-micarta-smoke-2.jpg', small: 'burlap-micarta-smoke-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Tan Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-tan-1.jpg', small: 'burlap-micarta-tan-1-small.jpg' },\n            { large: 'burlap-micarta-tan-2.jpg', small: 'burlap-micarta-tan-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Terracotta Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-terracotta-1.jpg', small: 'burlap-micarta-terracotta-1-small.jpg' },\n            { large: 'burlap-micarta-terracotta-2.jpg', small: 'burlap-micarta-terracotta-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Toxic Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-toxic-1.jpg', small: 'burlap-micarta-toxic-1-small.jpg' },\n            { large: 'burlap-micarta-toxic-2.jpg', small: 'burlap-micarta-toxic-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Turquoise Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-turquoise-1.jpg', small: 'burlap-micarta-turquoise-1-small.jpg' },\n            { large: 'burlap-micarta-turquoise-2.jpg', small: 'burlap-micarta-turquoise-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Vintage Bone Burlap Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'burlap-micarta-vintage-bone-1.jpg', small: 'burlap-micarta-vintage-bone-1-small.jpg' },\n            { large: 'burlap-micarta-vintage-bone-2.jpg', small: 'burlap-micarta-vintage-bone-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-black-1.jpg', small: 'canvas-micarta-black-1-small.jpg' },\n            { large: 'canvas-micarta-black-2.jpg', small: 'canvas-micarta-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Brown Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-brown-1.jpg', small: 'canvas-micarta-brown-1-small.jpg' },\n            { large: 'canvas-micarta-brown-2.jpg', small: 'canvas-micarta-brown-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Burgundy Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-burgundy-2.jpg', small: 'canvas-micarta-burgundy-2-small.jpg' },\n            { large: 'canvas-micarta-burgundy-1.jpg', small: 'canvas-micarta-burgundy-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Firedog Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-firedog-1.jpg', small: 'canvas-micarta-firedog-1-small.jpg' },\n            { large: 'canvas-micarta-firedog-2.jpg', small: 'canvas-micarta-firedog-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Green Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-green-1.jpg', small: 'canvas-micarta-green-1-small.jpg' },\n            { large: 'canvas-micarta-green-2.jpg', small: 'canvas-micarta-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Natural Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-natural-1.jpg', small: 'canvas-micarta-natural-1-small.jpg' },\n            { large: 'canvas-micarta-natural-2.jpg', small: 'canvas-micarta-natural-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Snakeskin Burgundy Canvas Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'canvas-micarta-snakeskin-burgundy-1.jpg', small: 'canvas-micarta-snakeskin-burgundy-1-small.jpg' },\n            { large: 'canvas-micarta-snakeskin-burgundy-2.jpg', small: 'canvas-micarta-snakeskin-burgundy-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black Carbon Fiber',\n        tags: ['synthetics'],\n        images: [\n            { large: 'carbon-fiber-black-2.jpg', small: 'carbon-fiber-black-2-small.jpg' },\n            { large: 'carbon-fiber-black-1.jpg', small: 'carbon-fiber-black-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black C-Tek',\n        tags: ['synthetics'],\n        images: [\n            { large: 'ctek-black-2.jpg', small: 'ctek-black-2-small.jpg' },\n            { large: 'ctek-black-1.jpg', small: 'ctek-black-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red C-Tek',\n        tags: ['synthetics'],\n        images: [\n            { large: 'ctek-red-1.jpg', small: 'ctek-red-1-small.jpg' },\n            { large: 'ctek-red-2.jpg', small: 'ctek-red-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue Cyclone Mesh',\n        tags: ['synthetics'],\n        images: [\n            { large: 'cyclone-mesh-blue-1.jpg', small: 'cyclone-mesh-blue-1-small.jpg' },\n            { large: 'cyclone-mesh-blue-2.jpg', small: 'cyclone-mesh-blue-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Green Cyclone Mesh',\n        tags: ['synthetics'],\n        images: [\n            { large: 'cyclone-mesh-green-1.jpg', small: 'cyclone-mesh-green-1-small.jpg' },\n            { large: 'cyclone-mesh-green-2.jpg', small: 'cyclone-mesh-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red Cyclone Mesh',\n        tags: ['synthetics'],\n        images: [\n            { large: 'cyclone-mesh-red-1.jpg', small: 'cyclone-mesh-red-1-small.jpg' },\n            { large: 'cyclone-mesh-red-2.jpg', small: 'cyclone-mesh-red-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Amber Sea Dragon Scale',\n        tags: ['synthetics', 'dragonscale'],\n        images: [\n            { large: 'dragon-scale-amber-sea-1.jpg', small: 'dragon-scale-amber-sea-1-small.jpg' },\n            { large: 'dragon-scale-amber-sea-2.jpg', small: 'dragon-scale-amber-sea-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Arctic Dragon Scale',\n        tags: ['synthetics', 'dragonscale'],\n        images: [\n            { large: 'dragon-scale-arctic-1.jpg', small: 'dragon-scale-arctic-1-small.jpg' },\n            { large: 'dragon-scale-arctic-2.jpg', small: 'dragon-scale-arctic-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Borealis Dragon Scale',\n        tags: ['synthetics', 'dragonscale'],\n        images: [\n            { large: 'dragon-scale-borealis-1.jpg', small: 'dragon-scale-borealis-1-small.jpg' },\n            { large: 'dragon-scale-borealis-2.jpg', small: 'dragon-scale-borealis-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Mystic Dragon Scale',\n        tags: ['synthetics', 'dragonscale'],\n        images: [\n            { large: 'dragon-scale-mystic-1.jpg', small: 'dragon-scale-mystic-1-small.jpg' },\n            { large: 'dragon-scale-mystic-2.jpg', small: 'dragon-scale-mystic-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Ruby Frost Dragon Scale',\n        tags: ['synthetics', 'dragonscale'],\n        images: [\n            { large: 'dragon-scale-ruby-frost-1.jpg', small: 'dragon-scale-ruby-frost-1-small.jpg' },\n            { large: 'dragon-scale-ruby-frost-2.jpg', small: 'dragon-scale-ruby-frost-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Sunfire Dragon Scale',\n        tags: ['synthetics', 'dragonscale'],\n        images: [\n            { large: 'dragon-scale-sunfire-1.jpg', small: 'dragon-scale-sunfire-1-small.jpg' },\n            { large: 'dragon-scale-sunfire-2.jpg', small: 'dragon-scale-sunfire-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-black-1.jpg', small: 'g10-black-1-small.jpg' },\n            { large: 'g10-black-2.jpg', small: 'g10-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blaze Orange G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-blaze-orange-1.jpg', small: 'g10-blaze-orange-1-small.jpg' },\n            { large: 'g10-blaze-orange-2.jpg', small: 'g10-blaze-orange-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue and Black G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-blue-and-black-1.jpg', small: 'g10-blue-and-black-1-small.jpg' },\n            { large: 'g10-blue-and-black-2.jpg', small: 'g10-blue-and-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue Glow G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-blue-glow-1.jpg', small: 'g10-blue-glow-1-small.jpg' },\n            { large: 'g10-blue-glow-2.jpg', small: 'g10-blue-glow-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Coyote Brown G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-coyote-brown-1.jpg', small: 'g10-coyote-brown-1-small.jpg' },\n            { large: 'g10-coyote-brown-2.jpg', small: 'g10-coyote-brown-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Forest Green G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-forest-green-1.jpg', small: 'g10-forest-green-1-small.jpg' },\n            { large: 'g10-forest-green-2.jpg', small: 'g10-forest-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Ghost Green Jade G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-ghost-green-jade-1.jpg', small: 'g10-ghost-green-jade-1-small.jpg' },\n            { large: 'g10-ghost-green-jade-2.jpg', small: 'g10-ghost-green-jade-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Midnite Tiger G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-midnite-tiger-1.jpg', small: 'g10-midnite-tiger-1-small.jpg' },\n            { large: 'g10-midnite-tiger-2.jpg', small: 'g10-midnite-tiger-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Mil-Spec Camo G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-mil-spec-camo-1.jpg', small: 'g10-mil-spec-camo-1-small.jpg' },\n            { large: 'g10-mil-spec-camo-2.jpg', small: 'g10-mil-spec-camo-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Pink G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-pink-1.jpg', small: 'g10-pink-1-small.jpg' },\n            { large: 'g10-pink-2.jpg', small: 'g10-pink-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Ranger Green G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-ranger-green-1.jpg', small: 'g10-ranger-green-1-small.jpg' },\n            { large: 'g10-ranger-green-2.jpg', small: 'g10-ranger-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-red-1.jpg', small: 'g10-red-1-small.jpg' },\n            { large: 'g10-red-2.jpg', small: 'g10-red-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Tigerstripe G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-tigerstripe-1.jpg', small: 'g10-tigerstripe-1-small.jpg' },\n            { large: 'g10-tigerstripe-2.jpg', small: 'g10-tigerstripe-2-small.jpg' },\n            { large: 'g10-tigerstripe-3.jpg', small: 'g10-tigerstripe-3-small.jpg' },\n        ]\n    },\n    {\n        name: 'White G-10',\n        tags: ['synthetics', 'g10'],\n        images: [\n            { large: 'g10-white-1.jpg', small: 'g10-white-1-small.jpg' },\n            { large: 'g10-white-2.jpg', small: 'g10-white-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Impala',\n        tags: ['naturals'],\n        images: [\n            { large: 'impala-1.jpg', small: 'impala-1-small.jpg' },\n            { large: 'impala-2.jpg', small: 'impala-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Antique Bone Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-antique-bone-1.jpg', small: 'linen-micarta-antique-bone-1-small.jpg' },\n            { large: 'linen-micarta-antique-bone-2.jpg', small: 'linen-micarta-antique-bone-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-black-1.jpg', small: 'linen-micarta-black-1-small.jpg' },\n            { large: 'linen-micarta-black-2.jpg', small: 'linen-micarta-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black and Green Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-black-and-green-1.jpg', small: 'linen-micarta-black-and-green-1-small.jpg' },\n            { large: 'linen-micarta-black-and-green-2.jpg', small: 'linen-micarta-black-and-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Green Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-green-1.jpg', small: 'linen-micarta-green-1-small.jpg' },\n            { large: 'linen-micarta-green-2.jpg', small: 'linen-micarta-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-red-2.jpg', small: 'linen-micarta-red-2-small.jpg' },\n            { large: 'linen-micarta-red-1.jpg', small: 'linen-micarta-red-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red and Black Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-red-and-black-1.jpg', small: 'linen-micarta-red-and-black-1-small.jpg' },\n            { large: 'linen-micarta-red-and-black-2.jpg', small: 'linen-micarta-red-and-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'White Linen Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'linen-micarta-white-1.jpg', small: 'linen-micarta-white-1-small.jpg' },\n            { large: 'linen-micarta-white-2.jpg', small: 'linen-micarta-white-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue and Black Lizard Skin',\n        tags: ['synthetics', 'lizardskin'],\n        images: [\n            { large: 'lizardskin-blue-and-black-1.jpg', small: 'lizardskin-blue-and-black-1-small.jpg' },\n            { large: 'lizardskin-blue-and-black-2.jpg', small: 'lizardskin-blue-and-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue and White Lizard Skin',\n        tags: ['synthetics', 'lizardskin'],\n        images: [\n            { large: 'lizardskin-blue-and-white-1.jpg', small: 'lizardskin-blue-and-white-1-small.jpg' },\n        ]\n    },\n    {\n        name: 'Green and Black Lizard Skin',\n        tags: ['synthetics', 'lizardskin'],\n        images: [\n            { large: 'lizardskin-green-and-black-1.jpg', small: 'lizardskin-green-and-black-1-small.jpg' },\n            { large: 'lizardskin-green-and-black-2.jpg', small: 'lizardskin-green-and-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Orange and Black Lizard Skin',\n        tags: ['synthetics', 'lizardskin'],\n        images: [\n            { large: 'lizardskin-orange-and-black-1.jpg', small: 'lizardskin-orange-and-black-1-small.jpg' },\n            { large: 'lizardskin-orange-and-black-2.jpg', small: 'lizardskin-orange-and-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red and Black Lizard Skin',\n        tags: ['synthetics', 'lizardskin'],\n        images: [\n            { large: 'lizardskin-red-and-black-1.jpg', small: 'lizardskin-red-and-black-1-small.jpg' },\n            { large: 'lizardskin-red-and-black-2.jpg', small: 'lizardskin-red-and-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue Denim Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'micarta-blue-denim-1.jpg', small: 'micarta-blue-denim-1-small.jpg' },\n            { large: 'micarta-blue-denim-2.jpg', small: 'micarta-blue-denim-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Bone White Micarta',\n        tags: ['synthetics', 'micarta'],\n        images: [\n            { large: 'micarta-bone-white-1.jpg', small: 'micarta-bone-white-1-small.jpg' },\n            { large: 'micarta-bone-white-2.jpg', small: 'micarta-bone-white-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-black-1.jpg', small: 'pinecone-black-1-small.jpg' },\n            { large: 'pinecone-black-2.jpg', small: 'pinecone-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black and White Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-black-and-white-1.jpg', small: 'pinecone-black-and-white-1-small.jpg' },\n            { large: 'pinecone-black-and-white-2.jpg', small: 'pinecone-black-and-white-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue and Copper Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-blue-and-copper-1.jpg', small: 'pinecone-blue-and-copper-1-small.jpg' },\n            { large: 'pinecone-blue-and-copper-2.jpg', small: 'pinecone-blue-and-copper-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Emerald Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-emerald-1.jpg', small: 'pinecone-emerald-1-small.jpg' },\n            { large: 'pinecone-emerald-2.jpg', small: 'pinecone-emerald-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Glow-in-the-dark Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-glow-in-the-dark-1.jpg', small: 'pinecone-glow-in-the-dark-1-small.jpg' },\n            { large: 'pinecone-glow-in-the-dark-2.jpg', small: 'pinecone-glow-in-the-dark-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-red-1.jpg', small: 'pinecone-red-1-small.jpg' },\n            { large: 'pinecone-red-2.jpg', small: 'pinecone-red-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Teal Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-teal-1.jpg', small: 'pinecone-teal-1-small.jpg' },\n            { large: 'pinecone-teal-2.jpg', small: 'pinecone-teal-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'White Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-white-1.jpg', small: 'pinecone-white-1-small.jpg' },\n            { large: 'pinecone-white-2.jpg', small: 'pinecone-white-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Yellow and Orange Pinecone',\n        tags: ['naturals', 'pinecone'],\n        images: [\n            { large: 'pinecone-yellow-and-orange-1.jpg', small: 'pinecone-yellow-and-orange-1-small.jpg' },\n            { large: 'pinecone-yellow-and-orange-2.jpg', small: 'pinecone-yellow-and-orange-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Rough Out Buffalo',\n        tags: ['naturals'],\n        images: [\n            { large: 'rough-out-buffalo-1.jpg', small: 'rough-out-buffalo-1-small.jpg' },\n            { large: 'rough-out-buffalo-2.jpg', small: 'rough-out-buffalo-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Smooth Bone',\n        tags: ['naturals'],\n        images: [\n            { large: 'smooth-bone-1.jpg', small: 'smooth-bone-1-small.jpg' },\n            { large: 'smooth-bone-2.jpg', small: 'smooth-bone-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black Texas Fencepost',\n        tags: ['naturals'],\n        images: [\n            { large: 'texas-fencepost-black-1.jpg', small: 'texas-fencepost-black-1-small.jpg' },\n            { large: 'texas-fencepost-black-2.jpg', small: 'texas-fencepost-black-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Blue Texas Fencepost',\n        tags: ['naturals'],\n        images: [\n            { large: 'texas-fencepost-blue-1.jpg', small: 'texas-fencepost-blue-1-small.jpg' },\n            { large: 'texas-fencepost-blue-2.jpg', small: 'texas-fencepost-blue-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Green Texas Fencepost',\n        tags: ['naturals'],\n        images: [\n            { large: 'texas-fencepost-green-1.jpg', small: 'texas-fencepost-green-1-small.jpg' },\n            { large: 'texas-fencepost-green-2.jpg', small: 'texas-fencepost-green-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Red Texas Fencepost',\n        tags: ['naturals'],\n        images: [\n            { large: 'texas-fencepost-red-1.jpg', small: 'texas-fencepost-red-1-small.jpg' },\n            { large: 'texas-fencepost-red-2.jpg', small: 'texas-fencepost-red-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Turquoise Texas Fencepost',\n        tags: ['naturals'],\n        images: [\n            { large: 'texas-fencepost-turquoise-1.jpg', small: 'texas-fencepost-turquoise-1-small.jpg' },\n            { large: 'texas-fencepost-turquoise-2.jpg', small: 'texas-fencepost-turquoise-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'White Texas Fencepost',\n        tags: ['naturals'],\n        images: [\n            { large: 'texas-fencepost-white-1.jpg', small: 'texas-fencepost-white-1-small.jpg' },\n            { large: 'texas-fencepost-white-2.jpg', small: 'texas-fencepost-white-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'American Walnut',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-american-walnut-1.jpg', small: 'wood-american-walnut-1-small.jpg' },\n            { large: 'wood-american-walnut-2.jpg', small: 'wood-american-walnut-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Birdseye Maple',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-birdseye-maple-1.jpg', small: 'wood-birdseye-maple-1-small.jpg' },\n            { large: 'wood-birdseye-maple-2.jpg', small: 'wood-birdseye-maple-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Black Ash Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-black-ash-burl-1.jpg', small: 'wood-black-ash-burl-1-small.jpg' },\n            { large: 'wood-black-ash-burl-2.jpg', small: 'wood-black-ash-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Bocote',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-bocote-1.jpg', small: 'wood-bocote-1-small.jpg' },\n            { large: 'wood-bocote-2.jpg', small: 'wood-bocote-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Dark Curly Maple',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-dark-curly-maple-1.jpg', small: 'wood-dark-curly-maple-1-small.jpg' },\n            { large: 'wood-dark-curly-maple-2.jpg', small: 'wood-dark-curly-maple-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Natural Curly Maple',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-natural-curly-maple-1.jpg', small: 'wood-natural-curly-maple-1-small.jpg' },\n            { large: 'wood-natural-curly-maple-2.jpg', small: 'wood-natural-curly-maple-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Desert Ironwood',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-desert-ironwood-1.jpg', small: 'wood-desert-ironwood-1-small.jpg' },\n            { large: 'wood-desert-ironwood-2.jpg', small: 'wood-desert-ironwood-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Desert Ironwood Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-desert-ironwood-burl-1.jpg', small: 'wood-desert-ironwood-burl-1-small.jpg' },\n            { large: 'wood-desert-ironwood-burl-2.jpg', small: 'wood-desert-ironwood-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Osage Orange',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-osage-orange-1.jpg', small: 'wood-osage-orange-1-small.jpg' },\n            { large: 'wood-osage-orange-2.jpg', small: 'wood-osage-orange-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Wenge',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-wenge-1.jpg', small: 'wood-wenge-1-small.jpg' },\n            { large: 'wood-wenge-2.jpg', small: 'wood-wenge-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Zebrawood',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-zebrawood-1.jpg', small: 'wood-zebrawood-1-small.jpg' },\n            { large: 'wood-zebrawood-2.jpg', small: 'wood-zebrawood-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Zericote',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-zericote-1.jpg', small: 'wood-zericote-1-small.jpg' },\n            { large: 'wood-zericote-2.jpg', small: 'wood-zericote-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Amboynia Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-amboynia-burl-1.jpg', small: 'wood-amboynia-burl-1-small.jpg' },\n            { large: 'wood-amboynia-burl-2.jpg', small: 'wood-amboynia-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'California Buckeye Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-california-buckeye-burl-1.jpg', small: 'wood-california-buckeye-burl-1-small.jpg' },\n            { large: 'wood-california-buckeye-burl-2.jpg', small: 'wood-california-buckeye-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Curly Koa Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-curly-koa-burl-1.jpg', small: 'wood-curly-koa-burl-1-small.jpg' },\n            { large: 'wood-curly-koa-burl-2.jpg', small: 'wood-curly-koa-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Colored Elder Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-colored-elder-burl-1.jpg', small: 'wood-colored-elder-burl-1-small.jpg' },\n            { large: 'wood-colored-elder-burl-2.jpg', small: 'wood-colored-elder-burl-2-small.jpg' },\n            { large: 'wood-colored-elder-burl-3.jpg', small: 'wood-colored-elder-burl-3-small.jpg' },\n        ]\n    },\n    {\n        name: 'Colored Maple Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-colored-maple-burl-1.jpg', small: 'wood-colored-maple-burl-1-small.jpg' },\n            { large: 'wood-colored-maple-burl-2.jpg', small: 'wood-colored-maple-burl-2-small.jpg' },\n            { large: 'wood-colored-maple-burl-3.jpg', small: 'wood-colored-maple-burl-3-small.jpg' },\n        ]\n    },\n    {\n        name: 'Colored Tigertail Maple Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-colored-tigertail-maple-burl-1.jpg', small: 'wood-colored-tigertail-maple-burl-1-small.jpg' },\n            { large: 'wood-colored-tigertail-maple-burl-2.jpg', small: 'wood-colored-tigertail-maple-burl-2-small.jpg' },\n            { large: 'wood-colored-tigertail-maple-burl-3.jpg', small: 'wood-colored-tigertail-maple-burl-3-small.jpg' },\n        ]\n    },\n    {\n        name: 'Mesquite Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-mesquite-burl-1.jpg', small: 'wood-mesquite-burl-1-small.jpg' },\n            { large: 'wood-mesquite-burl-2.jpg', small: 'wood-mesquite-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Natural Elder Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-natural-elder-burl-1.jpg', small: 'wood-natural-elder-burl-1-small.jpg' },\n            { large: 'wood-natural-elder-burl-2.jpg', small: 'wood-natural-elder-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Natural Maple Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-natural-maple-burl-1.jpg', small: 'wood-natural-maple-burl-1-small.jpg' },\n            { large: 'wood-natural-maple-burl-2.jpg', small: 'wood-natural-maple-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Spalted Maple Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-spalted-maple-burl-1.jpg', small: 'wood-spalted-maple-burl-1-small.jpg' },\n            { large: 'wood-spalted-maple-burl-2.jpg', small: 'wood-spalted-maple-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Thuyla Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-thuyla-burl-1.jpg', small: 'wood-thuyla-burl-1-small.jpg' },\n            { large: 'wood-thuyla-burl-2.jpg', small: 'wood-thuyla-burl-2-small.jpg' },\n        ]\n    },\n    {\n        name: 'Walnut Burl',\n        tags: ['wood'],\n        images: [\n            { large: 'wood-walnut-burl-1.jpg', small: 'wood-walnut-burl-1-small.jpg' },\n            { large: 'wood-walnut-burl-2.jpg', small: 'wood-walnut-burl-2-small.jpg' },\n        ]\n    },\n];\n\nMedia.sort((a, b) => { return a.name.localeCompare(b.name); });\n","import React from 'react';\nimport { Media } from './media';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport ModalImage from 'react-modal-image';\n\nimport './PreorderView.scss';\n\nconst imageWidthMinimum = 200;\nconst imageWidthMaximum = 400;\nconst imagePath = process.env.PUBLIC_URL + '/assets/images';\n\nconst _tagFilter = (tag) => {\n    return (item) => {\n        return item.tags.some((item) => { return item === tag; });\n    };\n};\n\nexport default class RootView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedPrimary: 'all',\n            selectedSecondary: 'all',\n            maxImageWidth: imageWidthMaximum,\n            all: Media,\n            g10: Media.filter(_tagFilter('g10')),\n            naturals: Media.filter(_tagFilter('naturals')),\n            synthetics: Media.filter(_tagFilter('synthetics')),\n            micarta: Media.filter(_tagFilter('micarta')),\n            wood: Media.filter(_tagFilter('wood')),\n            pinecone: Media.filter(_tagFilter('pinecone')),\n            dragonscale: Media.filter(_tagFilter('dragonscale')),\n            lizardskin: Media.filter(_tagFilter('lizardskin')),\n        };\n    }\n\n    zoom(zoomIn) {\n        const {\n            maxImageWidth,\n        } = this.state;\n\n        let newValue = maxImageWidth;\n\n        if (zoomIn) {\n            newValue = maxImageWidth + 50;\n        } else {\n            newValue = maxImageWidth - 50;\n        }\n\n        this.setState({ maxImageWidth: newValue });\n    }\n\n    renderToolbar() {\n        const {\n            maxImageWidth,\n            selectedPrimary,\n            selectedSecondary,\n        } = this.state;\n\n        const primaryButton = (type, text) => {\n            return (\n                <Button\n                    variant={selectedPrimary === type ? 'primary' : 'secondary'}\n                    onClick={() => this.setState({ selectedPrimary: type })}\n                >\n                { text }\n                </Button>\n            );\n        };\n\n        const secondaryButton = (type, text) => {\n            return (\n                <Button\n                    variant={selectedSecondary === type ? 'primary' : 'secondary'}\n                    onClick={() => this.setState({ selectedSecondary: type })}\n                >\n                { text }\n                </Button>\n            );\n        };\n\n        return (\n            <div className=\"toolbar\">\n                <ButtonGroup>\n                    { primaryButton('all', 'All') }\n                    { primaryButton('wood', 'Wood') }\n                    { primaryButton('naturals', 'Naturals') }\n                    { primaryButton('synthetics', 'Synthetics') }\n                </ButtonGroup>\n\n                { selectedPrimary === 'synthetics' && (\n                    <ButtonGroup>\n                        { secondaryButton('all', 'All') }\n                        { secondaryButton('g10', 'G-10') }\n                        { secondaryButton('micarta', 'Micarta') }\n                        { secondaryButton('dragonscale', 'Dragon Scale') }\n                        { secondaryButton('lizardskin', 'Lizard Skin') }\n                    </ButtonGroup>\n                )}\n\n                { selectedPrimary === 'naturals' && (\n                    <ButtonGroup>\n                        { secondaryButton('all', 'All') }\n                        { secondaryButton('pinecone', 'Pinecone') }\n                    </ButtonGroup>\n                )}\n\n                <ButtonGroup>\n                    <Button\n                        variant=\"link\"\n                        onClick={() => this.zoom(true)}\n                        disabled={maxImageWidth >= imageWidthMaximum}\n                    >\n                        Zoom +\n                    </Button>\n                    <Button\n                        variant=\"link\"\n                        onClick={() => this.zoom(false)}\n                        disabled={maxImageWidth <= imageWidthMinimum}\n                    >\n                        Zoom -\n                    </Button>\n                </ButtonGroup>\n            </div>\n        );\n    }\n\n    renderImages(images) {\n        const {\n            maxImageWidth,\n        } = this.state;\n\n        const styles = { maxWidth: maxImageWidth };\n\n        return images.map((image, idx) => {\n            return (\n                <div key={`image-${idx}`} className=\"image-container\" style={styles}>\n                    <ModalImage\n                        alt={image.name}\n                        small={`${imagePath}/${image.small}`}\n                        large={`${imagePath}/${image.large}`}\n                        hideDownload={true}\n                        hideZoom={true}\n                    />\n                </div>\n            );\n        });\n    }\n\n    renderMedia() {\n        const {\n            selectedPrimary,\n            selectedSecondary,\n        } = this.state;\n\n        let media = null;\n\n        switch (selectedPrimary) {\n            case 'all':\n            case 'wood':\n                media = this.state[selectedPrimary];\n                break;\n            case 'naturals':\n            case 'synthetics':\n                if (selectedSecondary === 'all') {\n                    media = this.state[selectedPrimary];\n                } else {\n                    media = this.state[selectedSecondary];\n                }\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div className=\"media\">\n                {\n                    media.map((item, idx) => {\n                        return (\n                            <div key={`row-${idx}`} className=\"media-row\">\n                                <div className=\"title\">\n                                    { item.name }\n                                </div>\n                                <div className=\"gallery\">\n                                    { this.renderImages(item.images) }\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"view preorder-view\">\n                { this.renderToolbar() }\n                { this.renderMedia() }\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport './App.scss';\n\nimport PreorderView from './views/PreorderView';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <PreorderView />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}